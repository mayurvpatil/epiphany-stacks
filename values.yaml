# Default values for temp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


elasticsearch:
  clusterName: "es-epiphany"
  nodeGroup: "master"
  masterService: ""
  roles:
    master: "true"
    ingest: "true"
    data: "true"
    remote_cluster_client: "true"
    ml: "true"
  replicas: 3
  minimumMasterNodes: 2
  esMajorVersion: ""
  esConfig: {}
  extraEnvs: []
  envFrom: []
  secretMounts: []
  hostAliases: []

  image: "docker.elastic.co/elasticsearch/elasticsearch"
  imageTag: "7.15.0"
  imagePullPolicy: "IfNotPresent"
  podAnnotations:
    {}

  labels: {}

  esJavaOpts: "" # example: "-Xmx1g -Xms1g"

  initResources:
    {}

  networkHost: "0.0.0.0"

  volumeClaimTemplate:
    accessModes: ["ReadWriteOnce"]
    resources:
      requests:
        storage: 30Gi

  rbac:
    create: false
    serviceAccountAnnotations: {}
    serviceAccountName: ""

  podSecurityPolicy:
    create: false
    name: ""
    spec:
      privileged: true
      fsGroup:
        rule: RunAsAny
      runAsUser:
        rule: RunAsAny
      seLinux:
        rule: RunAsAny
      supplementalGroups:
        rule: RunAsAny
      volumes:
        - secret
        - configMap
        - persistentVolumeClaim
        - emptyDir

  persistence:
    enabled: true
    labels:
      # Add default labels for the volumeClaimTemplate of the StatefulSet
      enabled: false
    annotations: {}

  extraVolumes:
    []
  extraVolumeMounts:
    []
  extraContainers:
    []
  extraInitContainers:
    []
  priorityClassName: ""
  antiAffinityTopologyKey: "kubernetes.io/hostname"
  antiAffinity: "hard"
  nodeAffinity: {}
  podManagementPolicy: "Parallel"
  enableServiceLinks: true
  protocol: http
  httpPort: 9200
  transportPort: 9300

  service:
    enabled: true
    labels: {}
    labelsHeadless: {}
    type: ClusterIP
    nodePort: ""
    annotations: {}
    httpPortName: http
    transportPortName: transport
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    externalTrafficPolicy: ""

  updateStrategy: RollingUpdate

  maxUnavailable: 1

  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000

  securityContext:
    capabilities:
      drop:
        - ALL
    # readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

  # How long to wait for elasticsearch to stop gracefully
  terminationGracePeriod: 120

  sysctlVmMaxMapCount: 262144

  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 3
    timeoutSeconds: 5

  # https://www.elastic.co/guide/en/elasticsearch/reference/7.15/cluster-health.html#request-params wait_for_status
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"

  schedulerName: ""

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []

  ingress:
    enabled: false
    annotations:
      {}
    hosts:
      - host: chart-example.local
        paths:
          - path: /
    tls: []

  nameOverride: ""
  fullnameOverride: ""
  healthNameOverride: ""

  lifecycle:
    {}

  sysctlInitContainer:
    enabled: true

  keystore: []

  networkPolicy:
    http:
      enabled: false

    transport:
      enabled: false
  tests:
    enabled: true
  fsGroup: ""

